-- Universidade Federal de Minas Gerais
-- Escola de Engenharia
-- Departamento de Engenharia Eletronica
-- Autoria: Professor Ricardo de Oliveira Duarte
-- Memória de Programas ou Memória de Instruções de tamanho genérico
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity memi is
    generic (
        INSTR_WIDTH   : natural := 32; -- tamanho da instrucaoo em numero de bits
        MI_ADDR_WIDTH : natural := 7 -- tamanho do endereco da memoria de instrucoes em numero de bits
    );
    port (
        clk       : in std_logic;
        --reset     : in std_logic;
        Endereco  : in std_logic_vector(MI_ADDR_WIDTH - 1 downto 0);
        Instrucao : out std_logic_vector(INSTR_WIDTH - 1 downto 0)
    );
end entity;

architecture comportamental of memi is
    type rom_type is array (0 to 2 ** MI_ADDR_WIDTH - 1) of std_logic_vector(INSTR_WIDTH - 1 downto 0);
    --signal aux : std_logic_vector(32 downto 0);
    constant codigo : rom_type := (
  0 =>     "00100000000000100000000000000000",--addi $2, $0, 0
  1 =>     "00100000000000110000000000000001",--addi $3, $0, 0 
  2 =>     "00100000000001000000000000000000",--addi $4, $0, 0
  3 =>     "00000000010000110010000000100000",--add $4, $2, $3 <-|
  4 =>     "00100000011000100000000000000000",--addi $2, $3, 0   |
  5 =>     "00100000100000110000000000000000",--addi $3, $4, 0   |
  6 =>     "00001000000000000000000000000011", -- j--------------|
  others =>     X"00000000");

    signal index : std_logic_vector(31 downto 0):= "00000000000000000000000000000000";
        begin
                    --index(29 downto 0)<= Endereco(31 downto 2);
                    instrucao <= codigo(to_integer(unsigned(Endereco)));

end comportamental;